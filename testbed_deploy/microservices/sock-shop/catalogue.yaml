---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels:
    name: catalogue
spec:
  replicas: 2
  selector:
    matchLabels:
      name: catalogue
  template:
    metadata:
      labels:
        name: catalogue
    spec:
      tolerations:
        - key: "sockshop"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
        - name: catalogue
#           env:
#             - name: ZIPKIN
# #              value: http://zipkin.jaeger.svc.cluster.local:9411/api/v1/spans
#               value: http://zipkin-mongo.default.svc.cluster.local:9411/api/v1/spans
          image: weaveworksdemos/catalogue:0.3.5
          imagePullPolicy: IfNotPresent
          command: [ "/app" ]
          args:
            - -port=80
          resources:
#            limits:
#              cpu: 200m
#              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          ports:
            - containerPort: 80
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 5
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
#      nodeSelector:
#        beta.kubernetes.io/os: linux
#        sockshop: "true"


---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  annotations:
    prometheus.io/scrape: 'true'
  labels:
    name: catalogue
spec:
  ports:
    # the port that this service should serve on
    - port: 80
      targetPort: 80
  selector:
    name: catalogue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      tolerations:
        - key: "sockshop"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
        - name: catalogue-db
          image: weaveworksdemos/catalogue-db:0.3.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
#            limits:
#              cpu: 200m
#              memory: 500Mi
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: fake_password
            - name: MYSQL_DATABASE
              value: socksdb
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
#      nodeSelector:
#        beta.kubernetes.io/os: linux
#        sockshop: "true"
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai

---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
spec:
  ports:
    # the port that this service should serve on
    - port: 3306
      targetPort: 3306
  selector:
    name: catalogue-db